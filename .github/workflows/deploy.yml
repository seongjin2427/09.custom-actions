name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
        with:
          # 제일 처음 의존성을 설치하는 단계에서
          # 명시적으로 캐싱이 되지 않는다는 것을 표현하기도 하고
          # 의존성을 최초로 설치를 해야 하기 때문에 'caching: false'로 지정합니다.
          caching: false
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
        with:
          # 이후의 Job에서의 Custom Action에서는 'caching: true'로 지정하여
          # 앞전 lint Job에서의 캐시를 활용할 수 있도록 합니다.
          caching: true
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
        with:
          # 이후의 Job에서의 Custom Action에서는 'caching: true'로 지정하여
          # 앞전 lint Job에서의 캐시를 활용할 수 있도록 합니다.
          caching: true
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        run: echo "Deploying..."
